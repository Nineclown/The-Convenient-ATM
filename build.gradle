buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:1.1+")
    }
}

plugins {
    id "org.sonarqube" version "2.6"
}


group 'com.swad.cppatm'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'findbugs'
apply plugin: 'jdepend'
apply plugin: 'net.serenity-bdd.aggregator'

sourceCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'


jar {
    manifest {
        attributes 'Title': 'My Application', 'Version': version, 'Main-Class': 'com.swad.cppatm.Main'
    }
    archiveName 'C++ ATM.jar'
    dependsOn configurations.runtime
    from {
        configurations.compile.collect {it.isDirectory()? it: zipTree(it)}
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.4'
    compile 'com.intellij:forms_rt:7.0.3'

    testCompile 'net.serenity-bdd:serenity-core:1.1.1'
    testCompile 'net.serenity-bdd:serenity-junit:1.1.1'
    testCompile('junit:junit:4.12')
    testCompile('org.assertj:assertj-core:1.7.0')
    testCompile('org.slf4j:slf4j-simple:1.7.7')
}

tasks.withType(JDepend) {
    reports {
        xml.enabled true
    }

}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

findbugs {

    ignoreFailures true //test fail을 build fail에 영향을 주지 않게 한다.
//    toolVersion = "3.0.1"
//    sourceSets = [sourceSets.main]
//    reportsDir = file("$project.buildDir/findbugsReports")
//    effort = "max"
//    showProgress = true
//    reportLevel = "high"
//    visitors = ["FindSqlInjection", "SwitchFallthrough"]
//    omitVisitors = ["FindNonShortCircuit"]
//    includeFilter = file("$rootProject.projectDir/config/findbugs/includeFilter.xml")
//    excludeFilter = file("$rootProject.projectDir/config/findbugs/excludeFilter.xml")
//    excludeBugsFilter = file("$rootProject.projectDir/config/findbugs/excludeBugsFilter.xml")
}

jdepend {
    ignoreFailures true
}

/*
sonarqube {
    properties {
        property "cppatm", "Java Gradle-based project analyzed on SonarCloud using Travis"
        property "cppatmsadsv", "com.sonarqube.examples.java-gradle-travis-project"
    }
}
*/
